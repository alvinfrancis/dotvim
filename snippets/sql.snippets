snippet infocol "select from infoschema columns for the table"
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = '${VISUAL:table_name}'
endsnippet

snippet spexec "Dynamic SQL with sp_executesql"
DECLARE @${1:Param1} AS ${2:NVARCHAR(50)},
        @SQLQuery AS NVARCHAR(${7:255}),
        @ParamDef AS NVARCHAR(${6:100})
SET @$1 = ${3:value}
SET @SQLQuery = ${4:query}
SET @ParamDef = ${5:'@$1 $2'}
EXECUTE sp_executesql @SQLQuery, @ParamDef, @$1
endsnippet

snippet catch "catch exception"
BEGIN CATCH
    DECLARE @nvchrErrorMessage NVARCHAR(4000),
            @intErrorSeverity INT,
            @intErrorState INT
    SET @nvchrErrorMessage = ERROR_MESSAGE()
    SET @intErrorSeverity = ERROR_SEVERITY()
    SET @intErrorState = ERROR_STATE()
    RAISERROR (@nvchrErrorMessage,
               @intErrorSeverity,
               @intErrorState)
    RETURN -1
END CATCH
endsnippet

snippet try "try exception"
BEGIN TRY
    ${1:--code}
END TRY
${0:post}
endsnippet

snippet proc "create procedure"
CREATE PROCEDURE dbo.usp${1:name}
AS
BEGIN
    ${0:--code}
    RETURN 0
END
GO
endsnippet

snippet view "create view"
CREATE VIEW dbo.vw${1:name}
AS
${0:--code}
endsnippet

snippet func "create function"
CREATE FUNCTION dbo.udf${1:function}(@${2:in} ${3:NVARCHAR(100)})
RETURNS ${4:NVARCHAR(100)}
BEGIN
    ${0:--code}
    RETURN 0
END
GO
endsnippet

snippet droptable "check then drop table"
IF OBJECT_ID('${VISUAL:Object}') IS NOT NULL
    DROP TABLE ${VISUAL:}
GO
endsnippet

snippet dropproc "check then drop procedure"
IF OBJECT_ID('${VISUAL:Object}') IS NOT NULL
    DROP PROCEDURE ${VISUAL:}
GO
endsnippet

snippet dropview "check then drop view"
IF OBJECT_ID('${VISUAL:Object}') IS NOT NULL
    DROP VIEW ${VISUAL:}
GO
endsnippet

snippet dropfunc "check then drop function"
IF OBJECT_ID('${VISUAL:Object}') IS NOT NULL
    DROP VIEW ${VISUAL:}
GO
endsnippet

snippet icqaheader "icqa sql code header"
/************************************************************************ 
*
* Name        : dbo.${VISUAL}
* Description : ${1:Procedure/Function Description}
* Updates     : `!v strftime("%d-%m-%Y")` - Created by Alvin Dumalus
*               
*
**************************************************************************/
${0:code}
endsnippet

snippet cursor "generic sql cursor code"
DECLARE ${2:@result} NVARCHAR
DECLARE ${1:cursor} CURSOR FOR  
${3:--SELECT query}

OPEN $1   
FETCH NEXT FROM $1 INTO $2

WHILE @@FETCH_STATUS = 0   
BEGIN   
       ${0:--code}
       FETCH NEXT FROM $1 INTO $2
END  

CLOSE $1
DEALLOCATE $1
endsnippet

snippet --vim "vim options"
-- vim:foldmethod=marker:foldmarker={{{,-------------------------
endsnippet
